//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoLenguajesMMDS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Answer> Answer { get; set; }
        public virtual DbSet<Appointment> Appointment { get; set; }
        public virtual DbSet<Canton> Canton { get; set; }
        public virtual DbSet<Course> Course { get; set; }
        public virtual DbSet<Distric> Distric { get; set; }
        public virtual DbSet<Office_Hours> Office_Hours { get; set; }
        public virtual DbSet<Person> Person { get; set; }
        public virtual DbSet<Person_Social_Network> Person_Social_Network { get; set; }
        public virtual DbSet<Professor> Professor { get; set; }
        public virtual DbSet<Professor_Course> Professor_Course { get; set; }
        public virtual DbSet<Province> Province { get; set; }
        public virtual DbSet<Query> Query { get; set; }
        public virtual DbSet<Social_Network> Social_Network { get; set; }
        public virtual DbSet<Student> Student { get; set; }
    
        public virtual int Accept_Appointment(Nullable<int> appointment_id)
        {
            var appointment_idParameter = appointment_id.HasValue ?
                new ObjectParameter("Appointment_id", appointment_id) :
                new ObjectParameter("Appointment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Accept_Appointment", appointment_idParameter);
        }
    
        public virtual int Accept_Student_Account(Nullable<int> student_id, Nullable<int> update_by)
        {
            var student_idParameter = student_id.HasValue ?
                new ObjectParameter("Student_id", student_id) :
                new ObjectParameter("Student_id", typeof(int));
    
            var update_byParameter = update_by.HasValue ?
                new ObjectParameter("Update_by", update_by) :
                new ObjectParameter("Update_by", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Accept_Student_Account", student_idParameter, update_byParameter);
        }
    
        public virtual int Create_Appointment(Nullable<int> professor_course_id, Nullable<int> student_id, string start_hour, string end_hour, string day)
        {
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            var student_idParameter = student_id.HasValue ?
                new ObjectParameter("Student_id", student_id) :
                new ObjectParameter("Student_id", typeof(int));
    
            var start_hourParameter = start_hour != null ?
                new ObjectParameter("Start_hour", start_hour) :
                new ObjectParameter("Start_hour", typeof(string));
    
            var end_hourParameter = end_hour != null ?
                new ObjectParameter("End_hour", end_hour) :
                new ObjectParameter("End_hour", typeof(string));
    
            var dayParameter = day != null ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Appointment", professor_course_idParameter, student_idParameter, start_hourParameter, end_hourParameter, dayParameter);
        }
    
        public virtual int Delete_Appointment(Nullable<int> appointment_id)
        {
            var appointment_idParameter = appointment_id.HasValue ?
                new ObjectParameter("Appointment_id", appointment_id) :
                new ObjectParameter("Appointment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Appointment", appointment_idParameter);
        }
    
        public virtual int Delete_Course(Nullable<int> course_id)
        {
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("Course_id", course_id) :
                new ObjectParameter("Course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Course", course_idParameter);
        }
    
        public virtual int Delete_Office_Hours(Nullable<int> office_hours_id)
        {
            var office_hours_idParameter = office_hours_id.HasValue ?
                new ObjectParameter("Office_hours_id", office_hours_id) :
                new ObjectParameter("Office_hours_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Office_Hours", office_hours_idParameter);
        }
    
        public virtual int DeletePersonSocialNetwork(Nullable<int> social_network_id, Nullable<int> person_id)
        {
            var social_network_idParameter = social_network_id.HasValue ?
                new ObjectParameter("Social_network_id", social_network_id) :
                new ObjectParameter("Social_network_id", typeof(int));
    
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePersonSocialNetwork", social_network_idParameter, person_idParameter);
        }
    
        public virtual int DeleteSocialNetwork(Nullable<int> social_network_id)
        {
            var social_network_idParameter = social_network_id.HasValue ?
                new ObjectParameter("Social_network_id", social_network_id) :
                new ObjectParameter("Social_network_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSocialNetwork", social_network_idParameter);
        }
    
        public virtual int Desactivate_Person_Account(Nullable<int> person_id, Nullable<int> update_by)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var update_byParameter = update_by.HasValue ?
                new ObjectParameter("Update_by", update_by) :
                new ObjectParameter("Update_by", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Desactivate_Person_Account", person_idParameter, update_byParameter);
        }
    
        public virtual ObjectResult<Get_Professor_By_Id_Result> Get_Professor_By_Id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Professor_By_Id_Result>("Get_Professor_By_Id", idParameter);
        }
    
        public virtual ObjectResult<Get_Professors_Result> Get_Professors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Professors_Result>("Get_Professors");
        }
    
        public virtual ObjectResult<Get_Professors_Off_Result> Get_Professors_Off()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Professors_Off_Result>("Get_Professors_Off");
        }
    
        public virtual ObjectResult<Get_Students_Result> Get_Students()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Students_Result>("Get_Students");
        }
    
        public virtual ObjectResult<Get_Students_By_id_Result> Get_Students_By_id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Students_By_id_Result>("Get_Students_By_id", idParameter);
        }
    
        public virtual ObjectResult<Get_Students_Off_Result> Get_Students_Off()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Students_Off_Result>("Get_Students_Off");
        }
    
        public virtual int Insert_Course(Nullable<int> credits, string code, string name, Nullable<int> term)
        {
            var creditsParameter = credits.HasValue ?
                new ObjectParameter("Credits", credits) :
                new ObjectParameter("Credits", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var termParameter = term.HasValue ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Course", creditsParameter, codeParameter, nameParameter, termParameter);
        }
    
        public virtual int Insert_Office_Hours(string start_Hour, string end_Hour, string day, Nullable<int> professor_course_id)
        {
            var start_HourParameter = start_Hour != null ?
                new ObjectParameter("Start_Hour", start_Hour) :
                new ObjectParameter("Start_Hour", typeof(string));
    
            var end_HourParameter = end_Hour != null ?
                new ObjectParameter("End_Hour", end_Hour) :
                new ObjectParameter("End_Hour", typeof(string));
    
            var dayParameter = day != null ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(string));
    
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Office_Hours", start_HourParameter, end_HourParameter, dayParameter, professor_course_idParameter);
        }
    
        public virtual int InsertPersonSocialNetwork(Nullable<int> person_id, Nullable<int> social_network_id, string uRL)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var social_network_idParameter = social_network_id.HasValue ?
                new ObjectParameter("Social_network_id", social_network_id) :
                new ObjectParameter("Social_network_id", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPersonSocialNetwork", person_idParameter, social_network_idParameter, uRLParameter);
        }
    
        public virtual int InsertSocialNetwork(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSocialNetwork", nameParameter);
        }
    
        public virtual int Promote_Professor(Nullable<int> professor_id, Nullable<int> update_by)
        {
            var professor_idParameter = professor_id.HasValue ?
                new ObjectParameter("Professor_id", professor_id) :
                new ObjectParameter("Professor_id", typeof(int));
    
            var update_byParameter = update_by.HasValue ?
                new ObjectParameter("Update_by", update_by) :
                new ObjectParameter("Update_by", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Promote_Professor", professor_idParameter, update_byParameter);
        }
    
        public virtual int Promote_Student(Nullable<int> student_id, Nullable<int> update_by)
        {
            var student_idParameter = student_id.HasValue ?
                new ObjectParameter("Student_id", student_id) :
                new ObjectParameter("Student_id", typeof(int));
    
            var update_byParameter = update_by.HasValue ?
                new ObjectParameter("Update_by", update_by) :
                new ObjectParameter("Update_by", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Promote_Student", student_idParameter, update_byParameter);
        }
    
        public virtual int Reactivate_Person_Account(Nullable<int> person_id, Nullable<int> update_by)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var update_byParameter = update_by.HasValue ?
                new ObjectParameter("Update_by", update_by) :
                new ObjectParameter("Update_by", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reactivate_Person_Account", person_idParameter, update_byParameter);
        }
    
        public virtual int Refuse_Appointment(Nullable<int> appointment_id)
        {
            var appointment_idParameter = appointment_id.HasValue ?
                new ObjectParameter("Appointment_id", appointment_id) :
                new ObjectParameter("Appointment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Refuse_Appointment", appointment_idParameter);
        }
    
        public virtual ObjectResult<Select_All_Accepted_Appointment_Result> Select_All_Accepted_Appointment(Nullable<int> professor_course_id)
        {
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_All_Accepted_Appointment_Result>("Select_All_Accepted_Appointment", professor_course_idParameter);
        }
    
        public virtual ObjectResult<Select_All_Appointment_Result> Select_All_Appointment(Nullable<int> professor_course_id)
        {
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_All_Appointment_Result>("Select_All_Appointment", professor_course_idParameter);
        }
    
        public virtual ObjectResult<Select_All_Course_From_Professor_Result> Select_All_Course_From_Professor(Nullable<int> professor_id)
        {
            var professor_idParameter = professor_id.HasValue ?
                new ObjectParameter("Professor_id", professor_id) :
                new ObjectParameter("Professor_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_All_Course_From_Professor_Result>("Select_All_Course_From_Professor", professor_idParameter);
        }
    
        public virtual ObjectResult<Select_All_Hold_Appointment_Result> Select_All_Hold_Appointment(Nullable<int> professor_course_id)
        {
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_All_Hold_Appointment_Result>("Select_All_Hold_Appointment", professor_course_idParameter);
        }
    
        public virtual ObjectResult<Select_Course_Result> Select_Course()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Course_Result>("Select_Course");
        }
    
        public virtual ObjectResult<Select_Course_By_Id_Result> Select_Course_By_Id(Nullable<int> course_id)
        {
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("Course_id", course_id) :
                new ObjectParameter("Course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Course_By_Id_Result>("Select_Course_By_Id", course_idParameter);
        }
    
        public virtual ObjectResult<Select_Office_Hours_Result> Select_Office_Hours()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Office_Hours_Result>("Select_Office_Hours");
        }
    
        public virtual ObjectResult<Select_Office_Hours_By_Course_Result> Select_Office_Hours_By_Course(Nullable<int> professor_course_id)
        {
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Office_Hours_By_Course_Result>("Select_Office_Hours_By_Course", professor_course_idParameter);
        }
    
        public virtual ObjectResult<Select_Office_Hours_By_Id_Result> Select_Office_Hours_By_Id(Nullable<int> office_hours_id)
        {
            var office_hours_idParameter = office_hours_id.HasValue ?
                new ObjectParameter("Office_hours_id", office_hours_id) :
                new ObjectParameter("Office_hours_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Office_Hours_By_Id_Result>("Select_Office_Hours_By_Id", office_hours_idParameter);
        }
    
        public virtual ObjectResult<Select_Professors_By_Course_Result> Select_Professors_By_Course(Nullable<int> course_id)
        {
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("Course_id", course_id) :
                new ObjectParameter("Course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Professors_By_Course_Result>("Select_Professors_By_Course", course_idParameter);
        }
    
        public virtual ObjectResult<SelectLogin_Result> SelectLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectLogin_Result>("SelectLogin", emailParameter, passwordParameter);
        }
    
        public virtual int Update_Appointment(Nullable<int> professor_course_id, Nullable<int> person_id, string start_hour, string end_hour, string day, string status)
        {
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var start_hourParameter = start_hour != null ?
                new ObjectParameter("Start_hour", start_hour) :
                new ObjectParameter("Start_hour", typeof(string));
    
            var end_hourParameter = end_hour != null ?
                new ObjectParameter("End_hour", end_hour) :
                new ObjectParameter("End_hour", typeof(string));
    
            var dayParameter = day != null ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Appointment", professor_course_idParameter, person_idParameter, start_hourParameter, end_hourParameter, dayParameter, statusParameter);
        }
    
        public virtual int Update_Course(Nullable<int> course_id, Nullable<int> credits, string code, string name, Nullable<int> term)
        {
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("Course_id", course_id) :
                new ObjectParameter("Course_id", typeof(int));
    
            var creditsParameter = credits.HasValue ?
                new ObjectParameter("Credits", credits) :
                new ObjectParameter("Credits", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var termParameter = term.HasValue ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Course", course_idParameter, creditsParameter, codeParameter, nameParameter, termParameter);
        }
    
        public virtual int Update_Office_Hours(Nullable<int> office_hours_id, string start_Hour, string end_Hour, string day, Nullable<int> professor_course_id)
        {
            var office_hours_idParameter = office_hours_id.HasValue ?
                new ObjectParameter("Office_hours_id", office_hours_id) :
                new ObjectParameter("Office_hours_id", typeof(int));
    
            var start_HourParameter = start_Hour != null ?
                new ObjectParameter("Start_Hour", start_Hour) :
                new ObjectParameter("Start_Hour", typeof(string));
    
            var end_HourParameter = end_Hour != null ?
                new ObjectParameter("End_Hour", end_Hour) :
                new ObjectParameter("End_Hour", typeof(string));
    
            var dayParameter = day != null ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(string));
    
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Office_Hours", office_hours_idParameter, start_HourParameter, end_HourParameter, dayParameter, professor_course_idParameter);
        }
    
        public virtual int Insert_Update_Professor(Nullable<int> person_id, string email, string password, string name, string last_name, string interests, byte[] profile_pic, Nullable<bool> status, Nullable<int> distric_id, Nullable<int> canton_id, Nullable<int> province_id, Nullable<int> created_by, Nullable<System.DateTime> create_at, Nullable<int> updated_by, Nullable<System.DateTime> updated_at, string role, string especiality, string action)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("Last_name", last_name) :
                new ObjectParameter("Last_name", typeof(string));
    
            var interestsParameter = interests != null ?
                new ObjectParameter("Interests", interests) :
                new ObjectParameter("Interests", typeof(string));
    
            var profile_picParameter = profile_pic != null ?
                new ObjectParameter("Profile_pic", profile_pic) :
                new ObjectParameter("Profile_pic", typeof(byte[]));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var distric_idParameter = distric_id.HasValue ?
                new ObjectParameter("Distric_id", distric_id) :
                new ObjectParameter("Distric_id", typeof(int));
    
            var canton_idParameter = canton_id.HasValue ?
                new ObjectParameter("Canton_id", canton_id) :
                new ObjectParameter("Canton_id", typeof(int));
    
            var province_idParameter = province_id.HasValue ?
                new ObjectParameter("Province_id", province_id) :
                new ObjectParameter("Province_id", typeof(int));
    
            var created_byParameter = created_by.HasValue ?
                new ObjectParameter("Created_by", created_by) :
                new ObjectParameter("Created_by", typeof(int));
    
            var create_atParameter = create_at.HasValue ?
                new ObjectParameter("Create_at", create_at) :
                new ObjectParameter("Create_at", typeof(System.DateTime));
    
            var updated_byParameter = updated_by.HasValue ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(int));
    
            var updated_atParameter = updated_at.HasValue ?
                new ObjectParameter("Updated_at", updated_at) :
                new ObjectParameter("Updated_at", typeof(System.DateTime));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var especialityParameter = especiality != null ?
                new ObjectParameter("Especiality", especiality) :
                new ObjectParameter("Especiality", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Update_Professor", person_idParameter, emailParameter, passwordParameter, nameParameter, last_nameParameter, interestsParameter, profile_picParameter, statusParameter, distric_idParameter, canton_idParameter, province_idParameter, created_byParameter, create_atParameter, updated_byParameter, updated_atParameter, roleParameter, especialityParameter, actionParameter);
        }
    
        public virtual int Insert_Update_Student(Nullable<int> person_id, string email, string password, string name, string last_name, string interests, byte[] profile_pic, Nullable<bool> status, Nullable<int> distric_id, Nullable<int> canton_id, Nullable<int> province_id, Nullable<int> created_by, Nullable<System.DateTime> create_at, Nullable<int> updated_by, Nullable<System.DateTime> updated_at, string role, string carne, string action)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("Last_name", last_name) :
                new ObjectParameter("Last_name", typeof(string));
    
            var interestsParameter = interests != null ?
                new ObjectParameter("Interests", interests) :
                new ObjectParameter("Interests", typeof(string));
    
            var profile_picParameter = profile_pic != null ?
                new ObjectParameter("Profile_pic", profile_pic) :
                new ObjectParameter("Profile_pic", typeof(byte[]));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var distric_idParameter = distric_id.HasValue ?
                new ObjectParameter("Distric_id", distric_id) :
                new ObjectParameter("Distric_id", typeof(int));
    
            var canton_idParameter = canton_id.HasValue ?
                new ObjectParameter("Canton_id", canton_id) :
                new ObjectParameter("Canton_id", typeof(int));
    
            var province_idParameter = province_id.HasValue ?
                new ObjectParameter("Province_id", province_id) :
                new ObjectParameter("Province_id", typeof(int));
    
            var created_byParameter = created_by.HasValue ?
                new ObjectParameter("Created_by", created_by) :
                new ObjectParameter("Created_by", typeof(int));
    
            var create_atParameter = create_at.HasValue ?
                new ObjectParameter("Create_at", create_at) :
                new ObjectParameter("Create_at", typeof(System.DateTime));
    
            var updated_byParameter = updated_by.HasValue ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(int));
    
            var updated_atParameter = updated_at.HasValue ?
                new ObjectParameter("Updated_at", updated_at) :
                new ObjectParameter("Updated_at", typeof(System.DateTime));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var carneParameter = carne != null ?
                new ObjectParameter("Carne", carne) :
                new ObjectParameter("Carne", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Update_Student", person_idParameter, emailParameter, passwordParameter, nameParameter, last_nameParameter, interestsParameter, profile_picParameter, statusParameter, distric_idParameter, canton_idParameter, province_idParameter, created_byParameter, create_atParameter, updated_byParameter, updated_atParameter, roleParameter, carneParameter, actionParameter);
        }
    
        public virtual int SpInsert_Update_Professor(Nullable<int> person_id, string email, string password, string name, string last_name, string interests, byte[] profile_pic, Nullable<bool> status, Nullable<int> distric_id, Nullable<int> canton_id, Nullable<int> province_id, Nullable<int> created_by, Nullable<System.DateTime> create_at, Nullable<int> updated_by, Nullable<System.DateTime> updated_at, string role, string especiality, string action)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("Person_id", person_id) :
                new ObjectParameter("Person_id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("Last_name", last_name) :
                new ObjectParameter("Last_name", typeof(string));
    
            var interestsParameter = interests != null ?
                new ObjectParameter("Interests", interests) :
                new ObjectParameter("Interests", typeof(string));
    
            var profile_picParameter = profile_pic != null ?
                new ObjectParameter("Profile_pic", profile_pic) :
                new ObjectParameter("Profile_pic", typeof(byte[]));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var distric_idParameter = distric_id.HasValue ?
                new ObjectParameter("Distric_id", distric_id) :
                new ObjectParameter("Distric_id", typeof(int));
    
            var canton_idParameter = canton_id.HasValue ?
                new ObjectParameter("Canton_id", canton_id) :
                new ObjectParameter("Canton_id", typeof(int));
    
            var province_idParameter = province_id.HasValue ?
                new ObjectParameter("Province_id", province_id) :
                new ObjectParameter("Province_id", typeof(int));
    
            var created_byParameter = created_by.HasValue ?
                new ObjectParameter("Created_by", created_by) :
                new ObjectParameter("Created_by", typeof(int));
    
            var create_atParameter = create_at.HasValue ?
                new ObjectParameter("Create_at", create_at) :
                new ObjectParameter("Create_at", typeof(System.DateTime));
    
            var updated_byParameter = updated_by.HasValue ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(int));
    
            var updated_atParameter = updated_at.HasValue ?
                new ObjectParameter("Updated_at", updated_at) :
                new ObjectParameter("Updated_at", typeof(System.DateTime));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var especialityParameter = especiality != null ?
                new ObjectParameter("Especiality", especiality) :
                new ObjectParameter("Especiality", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsert_Update_Professor", person_idParameter, emailParameter, passwordParameter, nameParameter, last_nameParameter, interestsParameter, profile_picParameter, statusParameter, distric_idParameter, canton_idParameter, province_idParameter, created_byParameter, create_atParameter, updated_byParameter, updated_atParameter, roleParameter, especialityParameter, actionParameter);
        }
    
        public virtual ObjectResult<Get_Canton_By_Province_Result> Get_Canton_By_Province(Nullable<int> province_Id)
        {
            var province_IdParameter = province_Id.HasValue ?
                new ObjectParameter("Province_Id", province_Id) :
                new ObjectParameter("Province_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Canton_By_Province_Result>("Get_Canton_By_Province", province_IdParameter);
        }
    
        public virtual ObjectResult<Get_District_By_Province_Canton_Result> Get_District_By_Province_Canton(Nullable<int> province_Id, Nullable<int> canton_Id)
        {
            var province_IdParameter = province_Id.HasValue ?
                new ObjectParameter("Province_Id", province_Id) :
                new ObjectParameter("Province_Id", typeof(int));
    
            var canton_IdParameter = canton_Id.HasValue ?
                new ObjectParameter("Canton_Id", canton_Id) :
                new ObjectParameter("Canton_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_District_By_Province_Canton_Result>("Get_District_By_Province_Canton", province_IdParameter, canton_IdParameter);
        }
    
        public virtual ObjectResult<Get_Province_Result> Get_Province()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Province_Result>("Get_Province");
        }
    
        public virtual int Insert_Update_Professor_To_Course(Nullable<int> professor_course_id, Nullable<int> professor_id, Nullable<int> course_id, Nullable<int> created_by, Nullable<int> updated_by, string action)
        {
            var professor_course_idParameter = professor_course_id.HasValue ?
                new ObjectParameter("Professor_course_id", professor_course_id) :
                new ObjectParameter("Professor_course_id", typeof(int));
    
            var professor_idParameter = professor_id.HasValue ?
                new ObjectParameter("Professor_id", professor_id) :
                new ObjectParameter("Professor_id", typeof(int));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("Course_id", course_id) :
                new ObjectParameter("Course_id", typeof(int));
    
            var created_byParameter = created_by.HasValue ?
                new ObjectParameter("Created_by", created_by) :
                new ObjectParameter("Created_by", typeof(int));
    
            var updated_byParameter = updated_by.HasValue ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Update_Professor_To_Course", professor_course_idParameter, professor_idParameter, course_idParameter, created_byParameter, updated_byParameter, actionParameter);
        }
    }
}
